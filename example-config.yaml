serviceHooks:
- event: git.pullrequest.created
  resourceFilters:
    statuses:
    - active
    reasons: []
    projects: []
    repositories: []
    sourceRefs:
    - refs/heads/feature/*
    targetRefs:
    - refs/heads/master
    templates:
    - '{{ .CreatedBy.DisplayName | title | contains "Obama" }}'
  rules:
    apply:
    - |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: pr-{{ .PullRequestID }}
        labels:
          azdPullRequestId: '{{ .PullRequestID }}'
- event: git.pullrequest.updated
  resourceFilters:
    statuses:
    - completed
    - abandoned
    reasons: []
    projects: []
    repositories: []
    sourceRefs:
    - refs/heads/feature/*
    targetRefs:
    - refs/heads/master
    templates:
    - '{{ .CreatedBy.DisplayName | title | contains "Obama" }}'
  rules:
    delete:
    - apiVersion: v1
      kind: Namespace
      selector:
        matchLabels:
          azdPullRequestId: '{{ .PullRequestID }}'
        matchExpressions:
        - key: azdPreserve
          operator: DoesNotExist
          values: []
- event: build.complete
  resourceFilters:
    statuses: []
    reasons:
    - manual
    projects: []
    templates:
    - '{{ eq .Definition.DefinitionType "yaml" }}'
  rules:
    delete:
    - apiVersion: v1
      kind: Namespace
      selector:
        matchLabels:
          azdBuildId: '{{ .BuildID }}'
        matchExpressions:
        - key: azdPreserve
          operator: DoesNotExist
          values: []
        - key: azdPullRequestId
          operator: DoesNotExist
          values: []